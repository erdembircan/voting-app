{"version":3,"sources":["models/user.js"],"names":["UserSchema","Schema","password","String","token","type","index","unique","tokenSecret","pre","saveHook","next","user","genSalt","err","salt","hashSync","module","exports","model"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAMA,aAAa,IAAI,mBAASC,MAAb,CAAoB;AACrCC,YAAUC,MAD2B;AAErCC,SAAO;AACLC,UAAMF,MADD;AAELG,WAAO,EAAEC,QAAQ,IAAV;AAFF,GAF8B;AAMrCC,eAAaL;AANwB,CAApB,CAAnB;;AASAH,WAAWS,GAAX,CAAe,MAAf,EAAuB,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AAC7C,MAAMC,OAAO,IAAb;;AAEA,SAAO,iBAAOC,OAAP,CAAe,UAACC,GAAD,EAAMC,IAAN,EAAe;AACnC,QAAID,GAAJ,EAAS,OAAOH,KAAKG,GAAL,CAAP;;AAETF,SAAKV,QAAL,GAAgB,iBAAOc,QAAP,CAAgBJ,KAAKV,QAArB,EAA+Ba,IAA/B,CAAhB;AACA;;AAEA,WAAOJ,MAAP;AACD,GAPM,CAAP;AAQD,CAXD;;AAaAM,OAAOC,OAAP,GAAiB,mBAASC,KAAT,CAAe,MAAf,EAAuBnB,UAAvB,CAAjB","file":"user.js","sourcesContent":["import mongoose from 'mongoose';\nimport bcrypt from 'bcrypt';\n\nconst UserSchema = new mongoose.Schema({\n  password: String,\n  token: {\n    type: String,\n    index: { unique: true },\n  },\n  tokenSecret: String,\n});\n\nUserSchema.pre('save', function saveHook(next) {\n  const user = this;\n\n  return bcrypt.genSalt((err, salt) => {\n    if (err) return next(err);\n\n    user.password = bcrypt.hashSync(user.password, salt);\n    // user.tokenSecret = bcrypt.hashSync(user.tokenSecret, salt);\n\n    return next();\n  });\n});\n\nmodule.exports = mongoose.model('User', UserSchema);\n"]}