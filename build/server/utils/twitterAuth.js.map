{"version":3,"sources":["utils/twitterAuth.js"],"names":["_params","callback","consumer_key","nonce","signature_method","token","tokenSecret","body","createAuthString","parameters","type","url","tempArray","Object","keys","map","key","pushStr","encodeURIComponent","push","timestamp","Math","floor","Date","getTime","version","signature","generateSignature","item","replace","join","signatureParams","toUpperCase","sort","signingKey","module","exports"],"mappings":";;AAAA;;;;AACA;;;;;;AACA;;;;;;;;;;AAUA,IAAMA,UAAU;AACdC,YAAU,EADI;AAEdC,gBAAc,EAFA;AAGdC,SAAO,EAHO;AAIdC,oBAAkB,WAJJ;AAKdC,SAAO,EALO;AAMdC,eAAa,EANC;AAOdC,QAAM;AAPQ,CAAhB;;AAUA;;;;;;;AAOA,SAASC,gBAAT,CAA0BC,UAA1B,EAAsCC,IAAtC,EAA4CC,GAA5C,EAAiD;AAC/C,MAAMC,YAAY,EAAlB;;AAEAC,SAAOC,IAAP,CAAYL,UAAZ,EAAwBM,GAAxB,CAA4B,UAACC,GAAD,EAAS;AACnC,QAAIA,QAAQ,MAAR,IAAkBA,QAAQ,aAA9B,EAA6C;AAC7C,QAAMC,qBAAmBD,GAAnB,UAA2BE,mBAAmBT,WAAWO,GAAX,CAAnB,CAA3B,MAAN;AACAJ,cAAUO,IAAV,CAAeF,OAAf;AACD,GAJD;;AAMA,MAAMG,kCAAgCC,KAAKC,KAAL,CAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAlC,CAAhC,MAAN;AACAZ,YAAUO,IAAV,CAAeC,SAAf;;AAEA,MAAMK,UAAU,qBAAhB;AACAb,YAAUO,IAAV,CAAeM,OAAf;;AAEA,MAAMC,kCAAgCR,mBAAmBS,kBACvDjB,IADuD,EAEvDC,GAFuD,EAGvDC,UAAUG,GAAV,CAAc;AAAA,WAAQa,KAAKC,OAAL,CAAa,MAAb,EAAqB,EAArB,CAAR;AAAA,GAAd,CAHuD,EAIvDpB,WAAWF,IAJ4C,EAKvDE,WAAWH,WAL4C,CAAnB,CAAhC,MAAN;AAOAM,YAAUO,IAAV,CAAeO,SAAf;;AAEA,oBAAgBd,UAAUkB,IAAV,CAAe,IAAf,CAAhB;AACD;;AAED;;;;;;;;;AASA,SAASH,iBAAT,CAA2BjB,IAA3B,EAAiCC,GAAjC,EAAsCF,UAAtC,EAAkDF,IAAlD,EAAwDD,WAAxD,EAAqE;AACnE,MAAMyB,kBAAqBrB,KAAKsB,WAAL,EAArB,SAA2Cd,mBAAmBP,GAAnB,CAA3C,SAAsEO,mBAAmBT,WAAWwB,IAAX,GAAkBH,IAAlB,CAAuB,GAAvB,CAAnB,CAAtE,IAAwHvB,OAAOW,yBAAuBX,IAAvB,CAAP,GAAwC,EAAhK,CAAN;;AAEA,MAAM2B,aAAgB,gBAAM,yBAAN,CAAhB,UAAoD5B,eAAe,EAAnE,CAAN;;AAEA,SAAO,uBAAK4B,UAAL,EAAiBH,eAAjB,CAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiB5B,gBAAjB","file":"twitterAuth.js","sourcesContent":["import hash from 'hmacsha1';\nimport sData from '../sData';\n/**\n * @typedef _params - params\n * @prop {string} [consumer_key] - consumer key\n * @prop {string} [callback] - callback\n * @prop {string} [nonce] - nonce\n * @prop {string} [signature_method] - signature method\n * @prop {string} [token] - token\n * @prop {string} [tokenSecret] - token secret\n * @prop {string} [body] - body\n */\nconst _params = {\n  callback: '',\n  consumer_key: '',\n  nonce: '',\n  signature_method: 'HMAC-SHA1',\n  token: '',\n  tokenSecret: '',\n  body: '',\n};\n\n/**\n * generate twitter authorizaion header string\n * @param {_params} parameters - parameters\n * @param {string} type - request type\n * @param {string} url - request URL\n * @returns {string} - header string\n */\nfunction createAuthString(parameters, type, url) {\n  const tempArray = [];\n\n  Object.keys(parameters).map((key) => {\n    if (key === 'body' || key === 'tokenSecret') return;\n    const pushStr = `oauth_${key}=\"${encodeURIComponent(parameters[key])}\"`;\n    tempArray.push(pushStr);\n  });\n\n  const timestamp = `oauth_timestamp=\"${Math.floor(new Date().getTime() / 1000)}\"`;\n  tempArray.push(timestamp);\n\n  const version = 'oauth_version=\"1.0\"';\n  tempArray.push(version);\n\n  const signature = `oauth_signature=\"${encodeURIComponent(generateSignature(\n    type,\n    url,\n    tempArray.map(item => item.replace(/(\")/g, '')),\n    parameters.body,\n    parameters.tokenSecret,\n  ))}\"`;\n  tempArray.push(signature);\n\n  return `OAuth ${tempArray.join(', ')}`;\n}\n\n/**\n * generate twitter auth signature\n * @param {string} type - type of the request\n * @param {string} url - request URL\n * @param {string} parameters - parameters\n * @param {string} [body] - body\n * @param {string} [tokenSecret] - token secret\n * @returns {string} - signature\n */\nfunction generateSignature(type, url, parameters, body, tokenSecret) {\n  const signatureParams = `${type.toUpperCase()}&${encodeURIComponent(url)}&${encodeURIComponent(parameters.sort().join('&'))}${body ? encodeURIComponent(`&${body}`) : ''}`;\n\n  const signingKey = `${sData['twitter-consumer-secret']}&${tokenSecret || ''}`;\n\n  return hash(signingKey, signatureParams);\n}\n\nmodule.exports = createAuthString;\n"]}